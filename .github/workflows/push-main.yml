name: 'push to main'
on:
  push:
    branches:
    - 'main'
jobs:
  deploy-project-factory:
    permissions: write-all       #permissions for the GITHUB-TOKEN

    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2.5.0

    # Install the latest version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3      

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.PROVIDER_NAME }} # this is the output provider_name from the TF module        
        service_account: ${{ secrets.SA_EMAIL }} # this is a SA email configured using the TF module with access to YOUR-GCS-BUCKET

    # Run Terraform init
    - name: Terraform Init
      id: init
      run: |
        cd terra-module
        terraform init 

    # Run a Terraform validate
    - name: Terraform validate
      id: validate
      if: success() || failure()
      run: |
        cd terra-module
        terraform validate -no-color

    # Run a Terraform apply
    - name: Terraform apply
      id: apply    
      if: success()  
      run: |
        cd terra-module
        terraform apply -auto-approve

    - name: Add PR Comment
      if: success()
      uses: mshick/add-pr-comment@v2
      with:
        message: |
          Terraform was successfully applied! ‚úÖüòÉ
          `#### Terraform apply output \`${{ steps.apply.outcome }}\`
        allow-repeats : true
 
    # Add a comment to pull requests if apply is not successfull
    - name: Create comment
      if: failure()
      uses: mshick/add-pr-comment@v2
      with:
        message: |
          terraform ended with failures. Go to actions tab for more details. ‚ùåüòï
          `#### Terraform apply output \`${{ steps.apply.outcome }}\`
        allow-repeats : true
